entry_point: agents.sac_stack_classification_branch_tl2_alix_256_aug_conv_encoder_vm.agent:Agent
kwargs:
  augmentation_config:
    use_aug: True
    pad: 8
  vehicle_measurements_config:
    entry_point: agents.models.vehicle_measurements.vehicle_measurements_encoder:VehicleMeasurementsEncoder
    lr: 0.001
    weight_decay: 0.0
    num_inputs: 2
    fc_dims: 8
    out_dims: 16
  classification_branch_config:
    lr: 0.001
    weight_decay: 0.0
    update_frequency: 1
    tl_fc_dims: 64
    tl_latent_size: 128
    weights: False
  waypoint_config:
    entry_point: agents.models.waypoints.waypoint_encoder:WaypointConvEncoder
    num_waypoints: 10
    fc_dims: 20
    out_dims: 32
    lr: 0.001
    weight_decay: 0.0
  encoder_config:
    entry_point: agents.models.feature_extraction.encoder_alix:EncoderV6_256
    lr: 0.001 #  curl used 0.001, sac paper used 0.0003
    weight_decay: 0.000 # TO BE VERIFIED
    pretrained: False
    use_tanh: False
    image_size: 256
    tau: 0.05
  agent_config:
    lr_alpha: 0.00001 # common.
    device: cuda:2
    gamma: 0.99 # common.
    alpha: 0.1 # common.
    automatic_alpha: True # common.
    batch_size: 256 # commom is 256. 
    latent_route_planner_size: 32
    latent_vehicle_measurement_size: 16
    latent_image_size: 256 # common is 512.
    target_update_interval: 1 # common.
    deque_size: 3
    pid:
      kp: 1.0
      ki: 0.2
      kd: 0.001
      dt: 0.1
    repeat_action: 2
    n_step: 1
    std_clip: 0.3
    std_schedule_init: 1.0
    std_schedule_final: 0.1
    std_schedule_duration: 500000 # should be 0.1 * maximum steps
  critic_config:
    entry_point: agents.models.rl_networks.critic_network:CriticNetwork
    fc1_dims: 1024 # common. 
    fc2_dims: 1024 # common.
    lr: 0.001 # common.
    update_frequency: 1 # common
    tau: 0.01
  actor_config:
    entry_point: agents.models.rl_networks.actor_network:ActorNetwork
    fc1_dims: 1024 # common.
    fc2_dims: 1024 # common.
    lr: 0.001 # common.
    log_sig_min: -10 # common.
    log_sig_max: 2 # common.
    epsilon: 0.000001 # common.
    update_frequency: 1 # common
  memory_config:
    capacity: 100000 # common (curl) (100000)
    num_workers: 2
    raw_state_info:
      central_rgb:
        shape: (9, 256, 256) # following regnet transformation to save memory.
        dtype: np.uint8
      route_plan:
        shape: (10, 2)
        dtype: np.float32
      vehicle_measurements: # speed, steer.
        shape: (6,)
        dtype: np.float32
      traffic_light_state:
        shape: (1,)
        dtype: np.uint8


    